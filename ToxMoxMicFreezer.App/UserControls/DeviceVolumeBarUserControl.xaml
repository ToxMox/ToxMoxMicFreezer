<!-- SPDX-License-Identifier: Apache-2.0 -->
<!-- Copyright (c) 2025 CrunchFocus LLC -->
<UserControl x:Class="ToxMoxMicFreezer.App.UserControls.DeviceVolumeBarUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ToxMoxMicFreezer.App"
             xmlns:converters="clr-namespace:ToxMoxMicFreezer.App.Converters"
             mc:Ignorable="d">
    
    <UserControl.Resources>
        <converters:VolumeToZeroConverter x:Key="VolumeToZeroConverter"/>
        <converters:PercentageToWidthMultiConverter x:Key="PercentageToWidthMultiConverter"/>
        <converters:PercentageToRectConverter x:Key="PercentageToRectConverter"/>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        
        <!-- Star Button Style for Favorites -->
        <Style x:Key="StarButtonStyle" TargetType="CheckBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Grid>
                            <TextBlock x:Name="StarIcon" 
                                      Text="&#xf005;" 
                                      FontFamily="{StaticResource FontAwesomeRegular}"
                                      FontSize="14" 
                                      HorizontalAlignment="Center" 
                                      VerticalAlignment="Center" 
                                      Foreground="#B0B0B0" 
                                      RenderTransformOrigin="0.5,0.5"
                                      Cursor="Hand">
                                <TextBlock.RenderTransform>
                                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                                </TextBlock.RenderTransform>
                            </TextBlock>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="StarIcon" Property="FontFamily" Value="{StaticResource FontAwesome}"/>
                                <Setter TargetName="StarIcon" Property="Foreground" Value="#FFD700"/>
                                <Setter TargetName="StarIcon" Property="Effect">
                                    <Setter.Value>
                                        <DropShadowEffect Color="#FFD700" ShadowDepth="0" BlurRadius="8" Opacity="0.6"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="StarIcon" Property="RenderTransform">
                                    <Setter.Value>
                                        <ScaleTransform ScaleX="1.1" ScaleY="1.1"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="DataGridStyle" TargetType="DataGrid">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}"/>
            <Setter Property="AlternatingRowBackground" Value="{DynamicResource ControlFillColorSecondaryBrush}"/>
            <Setter Property="RowBackground" Value="{DynamicResource ControlFillColorDefaultBrush}"/>
            <Setter Property="HorizontalGridLinesBrush" Value="Transparent"/>
            <Setter Property="VerticalGridLinesBrush" Value="Transparent"/>
        </Style>
        
        <Style x:Key="DataGridColumnHeaderStyle" TargetType="DataGridColumnHeader">
            <Setter Property="Background" Value="{DynamicResource ControlFillColorTertiaryBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}"/>
            <Setter Property="Padding" Value="8,4,8,4"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style>
        
        <Style x:Key="DataGridCellStyle" TargetType="DataGridCell">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="8,2"/>
        </Style>
    </UserControl.Resources>
    
    <Grid>
        <!-- DataGrid for device display -->
        <DataGrid x:Name="DeviceDataGrid"
                  ItemsSource="{Binding DeviceCollection, RelativeSource={RelativeSource AncestorType=UserControl}}"
                  Style="{StaticResource DataGridStyle}"
                  AutoGenerateColumns="False"
                  IsReadOnly="False"
                  HeadersVisibility="None"
                  GridLinesVisibility="None"
                  RowHeaderWidth="0"
                  CanUserAddRows="False"
                  CanUserDeleteRows="False"
                  CanUserReorderColumns="False"
                  CanUserResizeColumns="True"
                  CanUserSortColumns="True"
                  AllowDrop="True"
                  HorizontalAlignment="Stretch"
                  VirtualizingPanel.IsVirtualizing="False"
                  ScrollViewer.CanContentScroll="False"
                  ScrollViewer.VerticalScrollBarVisibility="Disabled"
                  ScrollViewer.HorizontalScrollBarVisibility="Disabled">
        <DataGrid.Resources>
            <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource DataGridColumnHeaderStyle}"/>
            <Style TargetType="DataGridCell" BasedOn="{StaticResource DataGridCellStyle}">
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>
        </DataGrid.Resources>
        <DataGrid.Columns>
            <!-- Favorite Column -->
            <DataGridTemplateColumn Header="Favorite" Width="32" IsReadOnly="True">
                <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate>
                        <Grid Margin="6,0,0,0">
                            <CheckBox IsChecked="{Binding IsFavorite, UpdateSourceTrigger=PropertyChanged}" 
                                     VerticalAlignment="Center"
                                     HorizontalAlignment="Center"
                                     Style="{StaticResource StarButtonStyle}"
                                     Click="StarButton_Click"/>
                        </Grid>
                    </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
            </DataGridTemplateColumn>
            
            <!-- Freeze Column -->
            <DataGridTemplateColumn Header="Freeze" Width="32" IsReadOnly="True">
                <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate>
                        <Grid>
                            <CheckBox IsChecked="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged}" 
                                     VerticalAlignment="Center"
                                     HorizontalAlignment="Center"
                                     Style="{DynamicResource InteractiveIconStyle}"
                                     Visibility="{Binding HasVolumeRange, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                            <TextBlock Text="N/A" 
                                      FontSize="10" 
                                      Foreground="{DynamicResource TextFillColorTertiaryBrush}"
                                      VerticalAlignment="Center"
                                      HorizontalAlignment="Center"
                                      Visibility="{Binding IsVolumeFixed, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                        </Grid>
                    </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
            </DataGridTemplateColumn>
            
            <!-- Mute Column -->
            <DataGridTemplateColumn Header="Mute" Width="32" IsReadOnly="True">
                <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate>
                        <Grid Margin="0,0,6,0">
                            <CheckBox IsChecked="{Binding IsMuted, UpdateSourceTrigger=PropertyChanged}" 
                                     VerticalAlignment="Center"
                                     HorizontalAlignment="Center"
                                     Style="{DynamicResource MuteButtonStyle}"
                                     Click="MuteButton_Click"/>
                        </Grid>
                    </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
            </DataGridTemplateColumn>
            
            <!-- Device Name + Volume Bar Column -->
            <DataGridTemplateColumn Header="Device Name" Width="*" IsReadOnly="True">
                <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate>
                        <Grid Margin="2">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            
                            <!-- Device name -->
                            <StackPanel Grid.Row="0" Orientation="Horizontal" VerticalAlignment="Center" Margin="4,2">
                                <!-- Device type indicator (only visible in Favorites tab) -->
                                <TextBlock x:Name="DeviceTypeIcon" 
                                          FontFamily="{StaticResource FontAwesome}" 
                                          FontSize="12" 
                                          Foreground="#808080" 
                                          VerticalAlignment="Center" 
                                          Margin="0,0,6,0">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <!-- Default: Hide the icon -->
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Style.Triggers>
                                                <!-- Show microphone icon for recording devices -->
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding DeviceType}" Value="Recording"/>
                                                        <Condition Binding="{Binding IsFavorite}" Value="True"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Text" Value="&#xf130;"/> <!-- Microphone icon -->
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </MultiDataTrigger>
                                                <!-- Show speaker icon for playback devices -->
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding DeviceType}" Value="Playback"/>
                                                        <Condition Binding="{Binding IsFavorite}" Value="True"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Text" Value="&#xf028;"/> <!-- Speaker icon -->
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                                
                                <TextBlock Text="[" Foreground="{DynamicResource TextFillColorTertiaryBrush}" VerticalAlignment="Center"/>
                                <TextBlock Text="{Binding Label}" Foreground="{DynamicResource SystemAccentColorPrimaryBrush}" FontWeight="SemiBold" VerticalAlignment="Center"/>
                                <TextBlock Text="] " Foreground="{DynamicResource TextFillColorTertiaryBrush}" VerticalAlignment="Center"/>
                                <TextBlock Text="{Binding Name}" VerticalAlignment="Center">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsVolumeFixed}" Value="True">
                                                    <Setter Property="Foreground" Value="{DynamicResource TextFillColorSecondaryBrush}"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                                <TextBlock Text=" (Fixed Volume)" Foreground="#FF8C00" VerticalAlignment="Center" FontStyle="Italic" FontSize="10">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsVolumeFixed}" Value="True">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                                
                                <!-- Multi-Channel Info Icon -->
                                <TextBlock Text=" ⓘ" 
                                          Foreground="{DynamicResource TextFillColorSecondaryBrush}" 
                                          VerticalAlignment="Center" 
                                          FontSize="12"
                                          ToolTip="Audio meters are not available for devices with more than 2 channels"
                                          Visibility="{Binding IsMultiChannel, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                            </StackPanel>
                            
                            <!-- Combined volume and meter bars with zero gap -->
                            <StackPanel Grid.Row="1">
                                <!-- Volume bar section -->
                                <Grid>
                                    <!-- Volume bar for adjustable devices -->
                                    <Border x:Name="VolumeBarContainer"
                                            Height="6" 
                                            VerticalAlignment="Top"
                                            Background="#777777" 
                                            Opacity="0.4"
                                            MouseLeftButtonDown="VolumeBar_MouseLeftButtonDown"
                                            MouseRightButtonDown="VolumeBar_MouseRightButtonDown"
                                            MouseMove="VolumeBar_MouseMove"
                                            MouseLeftButtonUp="VolumeBar_MouseLeftButtonUp"
                                            Cursor="Hand"
                                            Visibility="{Binding HasVolumeRange, Converter={StaticResource BooleanToVisibilityConverter}}">
                                        <!-- Volume fill -->
                                        <Border HorizontalAlignment="Left" 
                                                Height="6" 
                                                Background="#C4B5FD">
                                            <Border.Width>
                                                <MultiBinding Converter="{StaticResource PercentageToWidthMultiConverter}">
                                                    <Binding Path="VolumeBarFillPercentage"/>
                                                    <Binding Path="ActualWidth" ElementName="VolumeBarContainer"/>
                                                </MultiBinding>
                                            </Border.Width>
                                        </Border>
                                    </Border>
                                    
                                    <!-- 0dB marker line -->
                                    <Border HorizontalAlignment="Left" 
                                            VerticalAlignment="Top" 
                                            Width="3" 
                                            Height="6"
                                            Background="#FF0080" 
                                            Opacity="1.0"
                                            Visibility="{Binding HasVolumeRange, Converter={StaticResource BooleanToVisibilityConverter}}">
                                        <Border.RenderTransform>
                                            <TranslateTransform>
                                                <TranslateTransform.X>
                                                    <MultiBinding Converter="{StaticResource PercentageToWidthMultiConverter}">
                                                        <Binding Path="ZeroDbMarkerPosition"/>
                                                        <Binding Path="ActualWidth" ElementName="VolumeBarContainer"/>
                                                    </MultiBinding>
                                                </TranslateTransform.X>
                                            </TranslateTransform>
                                        </Border.RenderTransform>
                                    </Border>
                                    
                                    <!-- Current volume position indicator (1px white line) -->
                                    <Border HorizontalAlignment="Left" 
                                            VerticalAlignment="Top" 
                                            Width="1" 
                                            Height="6"
                                            Background="White" 
                                            Opacity="1.0"
                                            Visibility="{Binding HasVolumeRange, Converter={StaticResource BooleanToVisibilityConverter}}">
                                        <Border.RenderTransform>
                                            <TranslateTransform>
                                                <TranslateTransform.X>
                                                    <MultiBinding Converter="{StaticResource PercentageToWidthMultiConverter}">
                                                        <Binding Path="VolumeBarFillPercentage"/>
                                                        <Binding Path="ActualWidth" ElementName="VolumeBarContainer"/>
                                                    </MultiBinding>
                                                </TranslateTransform.X>
                                            </TranslateTransform>
                                        </Border.RenderTransform>
                                    </Border>
                                </Grid>
                                
                                <!-- Audio meter bar - 4px total height (4px mono or 2x2px stereo) -->
                                <Grid Height="4" VerticalAlignment="Top">
                                    <Grid.Style>
                                        <Style TargetType="Grid">
                                            <Setter Property="Visibility" Value="Visible"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsMultiChannel}" Value="True">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Grid.Style>
                                    <!-- Mono meter (full 4px height) - visible when not stereo -->
                                    <Border x:Name="MonoAudioMeterContainer"
                                            Height="4" 
                                            VerticalAlignment="Top"
                                            Background="#14FFFFFF">
                                        <Border.Style>
                                            <Style TargetType="Border">
                                                <Setter Property="Visibility" Value="Visible"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsStereo}" Value="True">
                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>
                                        <!-- Mono audio meter fill -->
                                        <Rectangle Height="4" 
                                                   HorizontalAlignment="Left"
                                                   Fill="{Binding MeterGradientBrush}">
                                            <Rectangle.Width>
                                                <Binding Path="ActualWidth" ElementName="MonoAudioMeterContainer"/>
                                            </Rectangle.Width>
                                            <Rectangle.Clip>
                                                <RectangleGeometry>
                                                    <RectangleGeometry.Rect>
                                                        <MultiBinding Converter="{StaticResource PercentageToRectConverter}">
                                                            <Binding Path="MeterBarFillPercentage"/>
                                                            <Binding Path="ActualWidth" ElementName="MonoAudioMeterContainer"/>
                                                        </MultiBinding>
                                                    </RectangleGeometry.Rect>
                                                </RectangleGeometry>
                                            </Rectangle.Clip>
                                        </Rectangle>
                                    </Border>
                                    
                                    <!-- Stereo meters (2x2px stacked) - visible when stereo -->
                                    <StackPanel Visibility="{Binding IsStereo, Converter={StaticResource BooleanToVisibilityConverter}}">
                                        <!-- Left channel meter (top 2px) -->
                                        <Border x:Name="LeftAudioMeterContainer"
                                                Height="2" 
                                                Background="#14FFFFFF">
                                            <Rectangle Height="2" 
                                                       HorizontalAlignment="Left"
                                                       Fill="{Binding LeftMeterGradientBrush}">
                                                <Rectangle.Width>
                                                    <Binding Path="ActualWidth" ElementName="LeftAudioMeterContainer"/>
                                                </Rectangle.Width>
                                                <Rectangle.Clip>
                                                    <RectangleGeometry>
                                                        <RectangleGeometry.Rect>
                                                            <MultiBinding Converter="{StaticResource PercentageToRectConverter}">
                                                                <Binding Path="LeftMeterBarFillPercentage"/>
                                                                <Binding Path="ActualWidth" ElementName="LeftAudioMeterContainer"/>
                                                            </MultiBinding>
                                                        </RectangleGeometry.Rect>
                                                    </RectangleGeometry>
                                                </Rectangle.Clip>
                                            </Rectangle>
                                        </Border>
                                        
                                        <!-- Right channel meter (bottom 2px) -->
                                        <Border x:Name="RightAudioMeterContainer"
                                                Height="2" 
                                                Background="#14FFFFFF">
                                            <Rectangle Height="2" 
                                                       HorizontalAlignment="Left"
                                                       Fill="{Binding RightMeterGradientBrush}">
                                                <Rectangle.Width>
                                                    <Binding Path="ActualWidth" ElementName="RightAudioMeterContainer"/>
                                                </Rectangle.Width>
                                                <Rectangle.Clip>
                                                    <RectangleGeometry>
                                                        <RectangleGeometry.Rect>
                                                            <MultiBinding Converter="{StaticResource PercentageToRectConverter}">
                                                                <Binding Path="RightMeterBarFillPercentage"/>
                                                                <Binding Path="ActualWidth" ElementName="RightAudioMeterContainer"/>
                                                            </MultiBinding>
                                                        </RectangleGeometry.Rect>
                                                    </RectangleGeometry>
                                                </Rectangle.Clip>
                                            </Rectangle>
                                        </Border>
                                    </StackPanel>
                                </Grid>
                            </StackPanel>
                        </Grid>
                    </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
            </DataGridTemplateColumn>
            
            <!-- Volume Text Column -->
            <DataGridTemplateColumn Header="Volume" Width="80">
                <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding VolumeDb, StringFormat='{}{0} dB'}"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  MouseLeftButtonDown="VolumeText_MouseLeftButtonDown"
                                  Cursor="IBeam">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding VolumeDb, Converter={StaticResource VolumeToZeroConverter}}" Value="False">
                                            <Setter Property="Foreground" Value="#FFD700"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
                <DataGridTemplateColumn.CellEditingTemplate>
                    <DataTemplate>
                        <TextBox Text="{Binding VolumeDb, UpdateSourceTrigger=PropertyChanged}"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Center"
                                HorizontalContentAlignment="Center"
                                KeyDown="VolumeTextBox_KeyDown"
                                LostFocus="VolumeTextBox_LostFocus"
                                Loaded="VolumeTextBox_Loaded"/>
                    </DataTemplate>
                </DataGridTemplateColumn.CellEditingTemplate>
            </DataGridTemplateColumn>
        </DataGrid.Columns>
        </DataGrid>
        
        <!-- Drop Indicator Line - shows where device will be dropped -->
        <Border x:Name="DropIndicator" 
                Height="3" 
                Background="#FF69B4" 
                Opacity="0.8"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Top"
                Margin="5,0,5,0"
                Visibility="Collapsed"
                Panel.ZIndex="1000">
            <Border.Effect>
                <DropShadowEffect Color="#FF69B4" ShadowDepth="0" BlurRadius="8" Opacity="0.6"/>
            </Border.Effect>
        </Border>
    </Grid>
</UserControl>